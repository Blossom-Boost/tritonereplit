name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.4.2
          poetry install

      - name: Setup environment secrets on .env
        env:
          SECRETS: ${{ secrets.ENVIRONMENT_SECRETS }}
        run: |
            echo "${SECRETS}" > .env

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.GCP_WIF_PROVIDER }}'
          service_account: '${{ secrets.GCP_WIF_SA_EMAIL }}'

      - name: Setup app
        run: |
          export $(grep -v '^#' .env | xargs)
          poetry run python setup.py

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ vars.REGION }}-docker.pkg.dev'

      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ORGANIZATION_NAME }}/${{ vars.SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.SERVICE_NAME }}
          region: ${{ vars.REGION }}
          image: ${{ vars.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ORGANIZATION_NAME }}/${{ vars.SERVICE_NAME }}:latest
          env_vars: |
            ${{ secrets.ENVIRONMENT_SECRETS }}